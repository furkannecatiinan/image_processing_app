"""
Multi-language support for the Image Processing Application
"""

TRANSLATIONS = {
    'en': {
        # Main app
        'app_title': 'Digital Image Processing Application',
        'app_description': 'A comprehensive tool for digital image processing with real-time preview',
        'sidebar_title': 'Image & Filters',
        'upload_image': 'Upload Image',
        'upload_help': 'Supported formats: PNG, JPG, JPEG, BMP, TIFF',
        'image_info': 'Image Information',
        'filter_categories': 'Filter Categories',
        'select_category': 'Select Category',
        'original_image': 'Original Image',
        'processed_image': 'Processed Image',
        'download_image': 'Download Processed Image',
        'welcome_message': 'Welcome! Upload an image to start processing',
        'sample_images': 'Sample Images',
        'select_sample': 'Select a sample image',
        'load_sample': 'Load Sample',
        'footer': 'Built with Streamlit ‚Ä¢ Advanced Image Processing Techniques',
        
        # Categories
        'fundamentals': 'Fundamentals',
        'transforms': 'Intensity Transforms',
        'frequency': 'Frequency Domain',
        'restoration': 'Image Restoration',
        'color': 'Color Processing',
        'wavelets': 'Wavelet Transform',
        'compression': 'Image Compression',
        'morphological': 'Morphological Operations',
        'segmentation': 'Image Segmentation',
        'features': 'Feature Extraction',
        
        # Filter names
        'gaussian_blur': 'Gaussian Blur',
        'edge_detection': 'Edge Detection',
        'threshold': 'Thresholding',
        'intensity_transform': 'Intensity Transform',
        'frequency_filter': 'Frequency Filter',
        'noise_reduction': 'Noise Reduction',
        'add_noise': 'Add Noise',
        'pseudocolor': 'Pseudocolor',
        'color_balance': 'Color Balance',
        'color_smoothing': 'Color Smoothing',
        'color_space': 'Color Space Conversion',
        'wavelet_transform': 'Wavelet Transform',
        'compression_filter': 'Compression',
        'morphological_op': 'Morphological Operation',
        'segmentation_filter': 'Segmentation',
        'feature_extraction': 'Feature Extraction',
        
        # Parameters
        'kernel_size': 'Kernel Size',
        'sigma': 'Sigma (œÉ)',
        'method': 'Method',
        'threshold_value': 'Threshold Value',
        'max_value': 'Maximum Value',
        'alpha': 'Alpha',
        'beta': 'Beta',
        'gamma': 'Gamma',
        'cutoff': 'Cutoff Frequency',
        'intensity': 'Intensity',
        'quality': 'Quality',
        'iterations': 'Iterations',
        'kernel_shape': 'Kernel Shape',
        'r_scale': 'Red Scale',
        'g_scale': 'Green Scale',
        'b_scale': 'Blue Scale',
        'target_space': 'Target Color Space',
        'wavelet_type': 'Wavelet Type',
        'level': 'Decomposition Level',
        'operation': 'Operation',
        'noise_type': 'Noise Type',
        'filter_type': 'Filter Type',
        'transform_type': 'Transform Type',
        'compression_type': 'Compression Type',
        'feature_type': 'Feature Type',
        'k_clusters': 'Number of Clusters',
        
        # Buttons
        'apply_filter': 'Apply Filter',
        'reset_image': 'Reset Image',
        'show_info': 'Show Information',
        
        # Method options
        'sobel': 'Sobel',
        'canny': 'Canny',
        'binary': 'Binary',
        'otsu': 'Otsu',
        'adaptive': 'Adaptive',
        'linear': 'Linear',
        'logarithmic': 'Logarithmic',
        'power_law': 'Power Law',
        'histogram_eq': 'Histogram Equalization',
        'lowpass': 'Low Pass',
        'highpass': 'High Pass',
        'bandpass': 'Band Pass',
        'gaussian': 'Gaussian',
        'salt_pepper': 'Salt & Pepper',
        'speckle': 'Speckle',
        'median': 'Median',
        'bilateral': 'Bilateral',
        'erosion': 'Erosion',
        'dilation': 'Dilation',
        'opening': 'Opening',
        'closing': 'Closing',
        'rect': 'Rectangle',
        'ellipse': 'Ellipse',
        'cross': 'Cross',
        'watershed': 'Watershed',
        'grabcut': 'GrabCut',
        'kmeans': 'K-Means',
        'basic': 'Basic Features',
        'texture': 'Texture Features',
        'color_hist': 'Color Histogram',
        'haar': 'Haar',
        'db4': 'Daubechies 4',
        'bior2.2': 'Biorthogonal 2.2',
        'jpeg': 'JPEG',
        'wavelet': 'Wavelet',
        'rle': 'Run Length Encoding',
        'huffman': 'Huffman Coding',
        'rgb': 'RGB',
        'hsv': 'HSV',
        'lab': 'LAB',
        'yuv': 'YUV',
        'gray': 'Grayscale',
        
        # UI Elements
        'title': 'üì∑ Image Processing Application',
        'upload_header': 'üìÅ Upload Image',
        'upload_text': 'Select an image',
        'upload_info': 'üëà Please upload an image from the left to get started.',
        'filter_selection': 'üîß Filter Selection',
        'category_select': 'Select Category',
        'filter_select': 'Select Filter',
        'result': 'üìä Result',
        'download': 'üíæ Download',
        'download_button': 'Download Processed Image',
        'uploaded_image': 'üì∑ Uploaded Image',
        'filter_settings': 'üîß Filter Settings',
        'tip': 'üí° Tip',
        'light_blur': 'Light',
        'medium_blur': 'Medium',
        'strong_blur': 'Strong',
        'sensitive_detection': 'Sensitive',
        'medium_detection': 'Medium',
        'selective_detection': 'Selective',
        'fixed_threshold': 'Fixed thresholding',
        'auto_threshold': 'Automatic threshold calculation',
        'local_threshold': 'Local thresholding',
        'brightens': 'Brightens',
        'no_change': 'No change',
        'darkens': 'Darkens',
        'illuminates_dark': 'Illuminates dark areas',
        'simple_contrast': 'Simple contrast adjustment',
        'smoothing_noise': 'Smoothing and noise reduction',
        'sharpening_detail': 'Sharpening and detail enhancement',
        'selective_filtering': 'Selective frequency filtering',
        'neighborhood_diameter': 'Neighborhood Diameter',
        'color_sigma': 'Color Sigma',
        'space_sigma': 'Space Sigma',
        'bilateral_tip': 'Bilateral filter provides the highest quality noise reduction while preserving edges',
        'salt_pepper_ideal': 'Ideal for salt-pepper noise',
        'general_noise': 'General noise reduction',
        'noise_cleaning': 'Noise cleaning and object separation',
        'gap_filling': 'Gap filling and object merging',
        'object_shrinking': 'Object shrinking and erosion',
        'object_expansion': 'Object expansion and dilation',
        'watershed_tip': 'Watershed segmentation is very effective in separating overlapping objects',
        'simple_segmentation': 'Simple segmentation',
        'detailed_segmentation': 'Detailed segmentation',
        'very_detailed_segmentation': 'Very detailed segmentation',
        'sobel_tip': 'Sobel operator provides fast and effective edge detection',
        'about_app': 'üéØ About This Application',
        'image_load_error': 'Image could not be loaded!',
        'file_not_found': 'Information file not found',
        'file_read_error': 'File reading error',
        'basic_filters': 'Basic Filters',
        'advanced_filters': 'Advanced Filters',
        'morphological_operations': 'Morphological Operations',
        'segmentation_filters': 'Segmentation',
        'lower_threshold': 'Lower Threshold',
        'upper_threshold': 'Upper Threshold',
        'clusters': 'Clusters',
    },
    
    'tr': {
        # Main app
        'app_title': 'Dijital G√∂r√ºnt√º ƒ∞≈üleme Uygulamasƒ±',
        'app_description': 'Ger√ßek zamanlƒ± √∂nizleme ile kapsamlƒ± dijital g√∂r√ºnt√º i≈üleme aracƒ±',
        'sidebar_title': 'G√∂r√ºnt√º & Filtreler',
        'upload_image': 'G√∂r√ºnt√º Y√ºkle',
        'upload_help': 'Desteklenen formatlar: PNG, JPG, JPEG, BMP, TIFF',
        'image_info': 'G√∂r√ºnt√º Bilgisi',
        'filter_categories': 'Filtre Kategorileri',
        'select_category': 'Kategori Se√ß',
        'original_image': 'Orijinal G√∂r√ºnt√º',
        'processed_image': 'ƒ∞≈ülenmi≈ü G√∂r√ºnt√º',
        'download_image': 'ƒ∞≈ülenmi≈ü G√∂r√ºnt√ºy√º ƒ∞ndir',
        'welcome_message': 'Ho≈ü geldiniz! ƒ∞≈üleme ba≈ülamak i√ßin bir g√∂r√ºnt√º y√ºkleyin',
        'sample_images': '√ñrnek G√∂r√ºnt√ºler',
        'select_sample': '√ñrnek g√∂r√ºnt√º se√ßin',
        'load_sample': '√ñrneƒüi Y√ºkle',
        'footer': 'Streamlit ile Geli≈ütirildi ‚Ä¢ Geli≈ümi≈ü G√∂r√ºnt√º ƒ∞≈üleme Teknikleri',
        
        # Categories
        'fundamentals': 'Temel Kavramlar',
        'transforms': 'Yoƒüunluk D√∂n√º≈ü√ºmleri',
        'frequency': 'Frekans Alanƒ±',
        'restoration': 'G√∂r√ºnt√º Restorasyon',
        'color': 'Renk ƒ∞≈üleme',
        'wavelets': 'Wavelet D√∂n√º≈ü√ºm√º',
        'compression': 'G√∂r√ºnt√º Sƒ±kƒ±≈ütƒ±rma',
        'morphological': 'Morfolojik ƒ∞≈ülemler',
        'segmentation': 'G√∂r√ºnt√º B√∂l√ºtleme',
        'features': '√ñzellik √áƒ±karƒ±mƒ±',
        
        # Filter names
        'gaussian_blur': 'Gaussian Bulanƒ±kla≈ütƒ±rma',
        'edge_detection': 'Kenar Belirleme',
        'threshold': 'E≈üikleme',
        'intensity_transform': 'Yoƒüunluk D√∂n√º≈ü√ºm√º',
        'frequency_filter': 'Frekans Filtresi',
        'noise_reduction': 'G√ºr√ºlt√º Azaltma',
        'add_noise': 'G√ºr√ºlt√º Ekleme',
        'pseudocolor': 'Sahte Renk',
        'color_balance': 'Renk Dengesi',
        'color_smoothing': 'Renk Yumu≈üatma',
        'color_space': 'Renk Uzayƒ± D√∂n√º≈ü√ºm√º',
        'wavelet_transform': 'Wavelet D√∂n√º≈ü√ºm√º',
        'compression_filter': 'Sƒ±kƒ±≈ütƒ±rma',
        'morphological_op': 'Morfolojik ƒ∞≈ülem',
        'segmentation_filter': 'B√∂l√ºtleme',
        'feature_extraction': '√ñzellik √áƒ±karƒ±mƒ±',
        
        # Parameters
        'kernel_size': '√áekirdek Boyutu',
        'sigma': 'Sigma (œÉ)',
        'method': 'Y√∂ntem',
        'threshold_value': 'E≈üik Deƒüeri',
        'max_value': 'Maksimum Deƒüer',
        'alpha': 'Alpha',
        'beta': 'Beta',
        'gamma': 'Gamma',
        'cutoff': 'Kesim Frekansƒ±',
        'intensity': 'Yoƒüunluk',
        'quality': 'Kalite',
        'iterations': 'Tekrarlama',
        'kernel_shape': '√áekirdek ≈ûekli',
        'r_scale': 'Kƒ±rmƒ±zƒ± √ñl√ßek',
        'g_scale': 'Ye≈üil √ñl√ßek',
        'b_scale': 'Mavi √ñl√ßek',
        'target_space': 'Hedef Renk Uzayƒ±',
        'wavelet_type': 'Wavelet T√ºr√º',
        'level': 'Ayrƒ±≈ütƒ±rma Seviyesi',
        'operation': 'ƒ∞≈ülem',
        'noise_type': 'G√ºr√ºlt√º T√ºr√º',
        'filter_type': 'Filtre T√ºr√º',
        'transform_type': 'D√∂n√º≈ü√ºm T√ºr√º',
        'compression_type': 'Sƒ±kƒ±≈ütƒ±rma T√ºr√º',
        'feature_type': '√ñzellik T√ºr√º',
        'k_clusters': 'K√ºme Sayƒ±sƒ±',
        
        # Buttons
        'apply_filter': 'Filtreyi Uygula',
        'reset_image': 'G√∂r√ºnt√ºy√º Sƒ±fƒ±rla',
        'show_info': 'Bilgi G√∂ster',
        
        # Method options
        'sobel': 'Sobel',
        'canny': 'Canny',
        'binary': 'ƒ∞kili',
        'otsu': 'Otsu',
        'adaptive': 'Uyarlanabilir',
        'linear': 'Doƒürusal',
        'logarithmic': 'Logaritmik',
        'power_law': 'G√º√ß Yasasƒ±',
        'histogram_eq': 'Histogram E≈üitleme',
        'lowpass': 'Al√ßak Ge√ßiren',
        'highpass': 'Y√ºksek Ge√ßiren',
        'bandpass': 'Bant Ge√ßiren',
        'gaussian': 'Gaussian',
        'salt_pepper': 'Tuz & Biber',
        'speckle': 'Benek',
        'median': 'Medyan',
        'bilateral': 'Bilateral',
        'erosion': 'A≈üƒ±ndƒ±rma',
        'dilation': 'Geni≈ületme',
        'opening': 'A√ßma',
        'closing': 'Kapama',
        'rect': 'Dikd√∂rtgen',
        'ellipse': 'Elips',
        'cross': '√áapraz',
        'watershed': 'Watershed',
        'grabcut': 'GrabCut',
        'kmeans': 'K-Ortalama',
        'basic': 'Temel √ñzellikler',
        'texture': 'Doku √ñzellikleri',
        'color_hist': 'Renk Histogramƒ±',
        'haar': 'Haar',
        'db4': 'Daubechies 4',
        'bior2.2': 'Biorthogonal 2.2',
        'jpeg': 'JPEG',
        'wavelet': 'Wavelet',
        'rle': 'Uzunluk Kodlama',
        'huffman': 'Huffman Kodlama',
        'rgb': 'RGB',
        'hsv': 'HSV',
        'lab': 'LAB',
        'yuv': 'YUV',
        'gray': 'Gri Tonlama',
        
        # UI Elements
        'title': 'üì∑ G√∂r√ºnt√º ƒ∞≈üleme Uygulamasƒ±',
        'upload_header': 'üìÅ G√∂r√ºnt√º Y√ºkle',
        'upload_text': 'Bir g√∂r√ºnt√º se√ßin',
        'upload_info': 'üëà Ba≈ülamak i√ßin l√ºtfen sol taraftan bir g√∂r√ºnt√º y√ºkleyin.',
        'filter_selection': 'üîß Filtre Se√ßimi',
        'category_select': 'Kategori Se√ßin',
        'filter_select': 'Filtre Se√ßin',
        'result': 'üìä Sonu√ß',
        'download': 'üíæ ƒ∞ndir',
        'download_button': 'ƒ∞≈ülenmi≈ü G√∂r√ºnt√ºy√º ƒ∞ndir',
        'uploaded_image': 'üì∑ Y√ºklenen G√∂r√ºnt√º',
        'filter_settings': 'üîß Filtre Ayarlarƒ±',
        'tip': 'üí° ƒ∞pucu',
        'light_blur': 'Hafif',
        'medium_blur': 'Orta',
        'strong_blur': 'G√º√ßl√º',
        'sensitive_detection': 'Hassas',
        'medium_detection': 'Orta',
        'selective_detection': 'Se√ßici',
        'fixed_threshold': 'Sabit e≈üikleme',
        'auto_threshold': 'Otomatik e≈üik hesaplama',
        'local_threshold': 'Yerel e≈üikleme',
        'brightens': 'Aydƒ±nlatƒ±r',
        'no_change': 'Deƒüi≈üiklik yok',
        'darkens': 'Koyula≈ütƒ±rƒ±r',
        'illuminates_dark': 'Karanlƒ±k alanlarƒ± aydƒ±nlatƒ±r',
        'simple_contrast': 'Basit kontrast ayarƒ±',
        'smoothing_noise': 'Yumu≈üatma ve g√ºr√ºlt√º azaltma',
        'sharpening_detail': 'Keskinle≈ütirme ve detay artƒ±rma',
        'selective_filtering': 'Se√ßici frekans filtreleme',
        'neighborhood_diameter': 'Kom≈üuluk √áapƒ±',
        'color_sigma': 'Renk Sigma',
        'space_sigma': 'Uzay Sigma',
        'bilateral_tip': 'Bilateral filtre kenarlarƒ± koruyarak en kaliteli g√ºr√ºlt√º azaltmayƒ± saƒülar',
        'salt_pepper_ideal': 'Tuz-biber g√ºr√ºlt√ºs√º i√ßin ideal',
        'general_noise': 'Genel g√ºr√ºlt√º azaltma',
        'noise_cleaning': 'G√ºr√ºlt√º temizleme ve nesne ayƒ±rma',
        'gap_filling': 'Bo≈üluk doldurma ve nesne birle≈ütirme',
        'object_shrinking': 'Nesne k√º√ß√ºltme ve a≈üƒ±ndƒ±rma',
        'object_expansion': 'Nesne b√ºy√ºtme ve geni≈ületme',
        'watershed_tip': 'Watershed segmentasyonu √ßakƒ±≈üan nesneleri ayƒ±rmada √ßok etkilidir',
        'simple_segmentation': 'Basit segmentasyon',
        'detailed_segmentation': 'Detaylƒ± segmentasyon',
        'very_detailed_segmentation': '√áok detaylƒ± segmentasyon',
        'sobel_tip': 'Sobel operat√∂r√º hƒ±zlƒ± ve etkili kenar tespiti yapar',
        'about_app': 'üéØ Bu Uygulama Hakkƒ±nda',
        'image_load_error': 'G√∂r√ºnt√º y√ºklenemedi!',
        'file_not_found': 'Bilgi dosyasƒ± bulunamadƒ±',
        'file_read_error': 'Dosya okuma hatasƒ±',
        'basic_filters': 'Temel Filtreler',
        'advanced_filters': 'Geli≈ümi≈ü Filtreler',
        'morphological_operations': 'Morfolojik ƒ∞≈ülemler',
        'segmentation_filters': 'Segmentasyon',
        'lower_threshold': 'Alt E≈üik',
        'upper_threshold': '√úst E≈üik',
        'clusters': 'K√ºmeler',
    }
}

def get_translations(language='en'):
    """Get translations for specified language"""
    return TRANSLATIONS.get(language, TRANSLATIONS['en'])

def get_text(key, language='en'):
    """Get specific text for a key in the specified language"""
    translations = get_translations(language)
    return translations.get(key, key) 